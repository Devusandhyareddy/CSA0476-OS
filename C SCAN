#include <stdio.h>
#include <stdlib.h>
#define MAX_TRACKS 200
#define MAX_REQUESTS 200
void sort(int arr[], int n) {
    int temp;
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}
void c_scan(int tracks[], int n, int head, int max_tracks) {
    sort(tracks, n);
    int seek_sequence[MAX_REQUESTS];
    int seek_count=0;
    for (int i = head; i < max_tracks; i++) {
        for (int j = 0; j < n; j++) {
            if (tracks[j] == i) {
                seek_sequence[seek_count] = i;
                seek_count++;
            }
        }
}
    for (int i = 0; i < head; i++) {
        for (int j = 0; j < n; j++) {
            if (tracks[j] == i) {
                seek_sequence[seek_count] = i;
                seek_count++;
            }
        }
    }
    printf("Seek Sequence: ");
    for (int i = 0; i < seek_count; i++) {
        printf("%d ", seek_sequence[i]);
}
    int total_seek_time = 0;
    for (int i = 1; i < seek_count; i++) {
        total_seek_time += abs(seek_sequence[i] - seek_sequence[i - 1]);
    }
    printf("\nTotal Seek Time: %d\n", total_seek_time);
}
int main() {
    int tracks[MAX_REQUESTS];
    int n, head, max_tracks;
    printf("Enter the number of tracks on the disk: ");
    scanf("%d", &max_tracks);
    printf("Enter the number of disk requests: ");
    scanf("%d", &n);
    printf("Enter the current position of the disk head: ");
    scanf("%d", &head);
    printf("Enter the disk request queue:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &tracks[i]);
    }
    c_scan(tracks, n, head, max_tracks);
    return 0;
}
